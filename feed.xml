<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://mhoo999.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mhoo999.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-13T01:19:32+00:00</updated><id>https://mhoo999.github.io/feed.xml</id><title type="html">TechHoonology</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">깃허브 블로그 만들기</title><link href="https://mhoo999.github.io/blog/2024/my-first-post/" rel="alternate" type="text/html" title="깃허브 블로그 만들기"/><published>2024-03-12T23:42:00+00:00</published><updated>2024-03-12T23:42:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/my-first-post</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/my-first-post/"><![CDATA[<p>https://github.com/topics/jekyll-theme 에서 다양한 테마를 구경할 수 있다. 테마 마다 설치 방법이 조금씩 다를 수 있으니, readme 파일을 꼭 읽어보길 바람! <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/1-480.webp 480w,/assets/img/240312/1-800.webp 800w,/assets/img/240312/1-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/1.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> 내가 선택한 al-folio 템플릿. 깔끔한 쿠앤크에 반응형 디자인이라 마음에 들었다. </div> <p><br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/2-480.webp 480w,/assets/img/240312/2-800.webp 800w,/assets/img/240312/2-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/2.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 테마를 선택하면 템플릿 레포지토리로 이동할 수 있다. 오른쪽 상단의 <code class="language-plaintext highlighter-rouge">Use this template</code> 드롭다운 버튼을 클릭하면 <code class="language-plaintext highlighter-rouge">Create a new repository</code>을 선택할 수 있다. <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/3-480.webp 480w,/assets/img/240312/3-800.webp 800w,/assets/img/240312/3-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/3.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 다른 항목은 크게 건들 필요가 없고, Repository name만 입력해주면 되는데, <code class="language-plaintext highlighter-rouge">&lt;your-github-username&gt;.github.io</code> 형식에 맞춰 작성해주면 된다. 필자는 <code class="language-plaintext highlighter-rouge">mhoo999.github.io</code>로 작성했다. <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/4-480.webp 480w,/assets/img/240312/4-800.webp 800w,/assets/img/240312/4-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/4.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/5-480.webp 480w,/assets/img/240312/5-800.webp 800w,/assets/img/240312/5-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/5.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 레포지토리가 생성됐다면 <code class="language-plaintext highlighter-rouge">Settings &gt; Actions &gt; General</code>로 이동하자. 아래로 내리면 Workflow permissions 컨테이너를 확인할 수 있는데, <code class="language-plaintext highlighter-rouge">Read and write permissions</code> 버튼을 클릭하여 워크플로우가 모든 범위에 대해 읽기 및 쓰기 권한을 가지도록 설정하고 저장해주자. <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/6-480.webp 480w,/assets/img/240312/6-800.webp 800w,/assets/img/240312/6-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/6.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 다음은 코드로 이동하여 <code class="language-plaintext highlighter-rouge">_config.yml</code>을 찾아보자. 19번째 줄에서 <code class="language-plaintext highlighter-rouge">url:</code>을 찾을 수 있다. 우리가 사용할 주소로 입력해주면 된다. 아래 <code class="language-plaintext highlighter-rouge">baseurl:</code>은 비워두자. <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/7-480.webp 480w,/assets/img/240312/7-800.webp 800w,/assets/img/240312/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 다시 <code class="language-plaintext highlighter-rouge">Settings</code>로 돌아가서 LMB의 <code class="language-plaintext highlighter-rouge">Pages</code>항목을 클릭한다. Build and deployment 컨테이너에서 <code class="language-plaintext highlighter-rouge">Source</code>가 <code class="language-plaintext highlighter-rouge">Deply from a branch</code>인지 확인하고, 아래 브랜치를 <code class="language-plaintext highlighter-rouge">gh-pages</code>로 변경하고 저장해주자. <br/> <br/> <br/></p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/240312/8-480.webp 480w,/assets/img/240312/8-800.webp 800w,/assets/img/240312/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/240312/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/> 이제 마무리다. 모든 설정이 완료되면 주소창에 url을 입력하고 엔터를 눌러보자. 다음과 같이 데모페이지를 확인할 수 있을 것이다. <br/> <br/> <br/> 다음 과정은 로컬에 클론을 만들고, 내 입맛대로 블로그를 꾸며주면 된다.</p>]]></content><author><name></name></author><category term="ETC"/><category term="github"/><category term="git"/><category term="blog"/><category term="jekyll"/><category term="al-folio"/><summary type="html"><![CDATA[jekyll 테마를 사용해서 깃허브 블로그를 만들어 보자!]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://mhoo999.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://mhoo999.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://mhoo999.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>