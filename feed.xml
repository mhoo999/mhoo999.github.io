<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://mhoo999.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mhoo999.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-05-02T11:34:03+00:00</updated><id>https://mhoo999.github.io/feed.xml</id><title type="html">TechHoonology</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">[백준] 1158번 요세푸스 문제 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1158/" rel="alternate" type="text/html" title="[백준] 1158번 요세푸스 문제 / C++"/><published>2024-05-02T00:00:00+00:00</published><updated>2024-05-02T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1158</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1158/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1158">백준 1158번 요세푸스 문제</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
    <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>
    
    <span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">k</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">k</span><span class="p">;</span>
    
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">vec</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'&lt;'</span><span class="p">;</span>
    
    <span class="kt">int</span> <span class="n">idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    
    <span class="k">while</span><span class="p">(</span><span class="mi">1</span> <span class="o">&lt;</span> <span class="n">vec</span><span class="p">.</span><span class="n">size</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">idx</span> <span class="o">=</span> <span class="p">(</span><span class="n">idx</span> <span class="o">+</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">vec</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
        
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">vec</span><span class="p">[</span><span class="n">idx</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">", "</span><span class="p">;</span>
        <span class="n">vec</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">vec</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">idx</span><span class="p">);</span>
    <span class="p">}</span>
    
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">vec</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="sc">'&gt;'</span><span class="p">;</span>
    
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>n개의 원소를 배열로 받아, k번째 원소를 출력/삭제하며 줄여가는 문제. 인덱스를 선언하여 출력할 원소를 연산하는 것이 포인트, 출력한 원소는 배열에서 삭제하고 모든 원소가 출력될 때까지 반복하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1018번 체스판 다시 칠하기 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1018/" rel="alternate" type="text/html" title="[백준] 1018번 체스판 다시 칠하기 / C++"/><published>2024-05-01T00:00:00+00:00</published><updated>2024-05-01T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1018</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1018/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1018">백준 1018번 체스판 다시 칠하기</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">char</span> <span class="n">board</span><span class="p">[</span><span class="mi">50</span><span class="p">][</span><span class="mi">50</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">minNum</span><span class="p">(</span><span class="mi">64</span><span class="p">);</span>

<span class="kt">char</span> <span class="n">wb</span><span class="p">[</span><span class="mi">8</span><span class="p">][</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
<span class="p">};</span>

<span class="kt">char</span> <span class="n">bw</span><span class="p">[</span><span class="mi">8</span><span class="p">][</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">},</span>
	<span class="p">{</span><span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">,</span> <span class="sc">'W'</span><span class="p">,</span> <span class="sc">'B'</span><span class="p">},</span>
<span class="p">};</span>

<span class="kt">void</span> <span class="nf">checkWb</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">wb</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">x</span><span class="p">][</span><span class="n">j</span> <span class="o">+</span> <span class="n">y</span><span class="p">])</span>
			<span class="p">{</span>
				<span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">minNum</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">minNum</span> <span class="o">=</span> <span class="n">cnt</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">checkBw</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">bw</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">board</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">x</span><span class="p">][</span><span class="n">j</span> <span class="o">+</span> <span class="n">y</span><span class="p">])</span>
			<span class="p">{</span>
				<span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">cnt</span> <span class="o">&lt;</span> <span class="n">minNum</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">minNum</span> <span class="o">=</span> <span class="n">cnt</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="kt">char</span> <span class="n">c</span><span class="p">;</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">c</span><span class="p">;</span>

			<span class="n">board</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span> <span class="o">-</span> <span class="mi">7</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">m</span> <span class="o">-</span> <span class="mi">7</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">checkWb</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
			<span class="n">checkBw</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">minNum</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>흰색, 검은색 타일이 연속된 최대 50x50 보드에서 8x8 크기를 잘라낸 후, 체스판으로 만드는 데 필요한 최소 비용을 구하는 문제이다. 나는 부르트포스를 이용해 <code class="language-plaintext highlighter-rouge">(0, 0)</code>부터 <code class="language-plaintext highlighter-rouge">(N-7, M-7)</code>까지 8x8의 범위를 최소 비용의 타일맵과 비교하여 문제를 해결했다. 비교 방법에 대해 고민을 많이 했다. NxM 보드에서 0-8, 1-9, 2-10… 까지 8개씩 끊어서 비교하는 방법, 그리고 비교타겟은 0-8인데, board의 1-9의 타일을 어떻게 비교할 것인지에 대해 고민했다. 풀고나니 간단했다. 함수를 떼어내 시작 숫자를 더하여 해결했다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 10773번 제로 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj10773/" rel="alternate" type="text/html" title="[백준] 10773번 제로 / C++"/><published>2024-04-30T00:00:00+00:00</published><updated>2024-04-30T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj10773</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj10773/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/10773">백준 10773번 제로</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">cashBook</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">k</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">k</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">k</span><span class="o">--</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cashBook</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">cashBook</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">cashBook</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">ans</span> <span class="o">+=</span> <span class="n">cashBook</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>k개 숫자를 입력 받아 저장하는데, 0이 입력되면 바로 전에 입력된 숫자를 지운다. 마지막에 저장된 모든 숫자를 더해 출력하면 되는 간단한 문제. vector를 이용하여 숫자를 입력받은 후 연산을 수행하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1920번 수 찾기 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1920/" rel="alternate" type="text/html" title="[백준] 1920번 수 찾기 / C++"/><published>2024-04-29T00:00:00+00:00</published><updated>2024-04-29T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1920</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1920/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1920">백준 1920번 수 찾기</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_set&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">unordered_set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">set</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

		<span class="n">set</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="n">set</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">!=</span> <span class="n">set</span><span class="p">.</span><span class="n">end</span><span class="p">())</span> <span class="o">?</span> <span class="s">"1"</span> <span class="o">:</span> <span class="s">"0"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>N개의 정수를 입력 받고, M개의 정수를 입력 받아 이전에 입력받은 정수 집합에 속하는 정수인지 확인하는 프로그램을 작성한다. 중복에 대한 처리가 필요없으므로, 원소를 찾는데 가장 속도가 빠른 해쉬셋을 사용했다. 존재 여부를 판단할 때, <code class="language-plaintext highlighter-rouge">find(x)</code> 함수는 x가 존재할 경우 Iterator를 반환하고, 없으면 <code class="language-plaintext highlighter-rouge">end()</code>를 반환한다. 조건에 따라 코드를 작성하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 10828번 스택 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj10828/" rel="alternate" type="text/html" title="[백준] 10828번 스택 / C++"/><published>2024-04-28T00:00:00+00:00</published><updated>2024-04-28T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj10828</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj10828/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/10828">백준 10828번 스택</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;memory&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="k">struct</span> <span class="nc">Node</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">data</span><span class="p">;</span>
	<span class="n">unique_ptr</span><span class="o">&lt;</span><span class="n">Node</span><span class="o">&gt;</span> <span class="n">prevNode</span><span class="p">;</span>

	<span class="n">Node</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span> <span class="o">:</span> <span class="n">data</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">prevNode</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">)</span> <span class="p">{}</span>
<span class="p">};</span>

<span class="k">class</span> <span class="nc">St</span>
<span class="p">{</span>
	<span class="n">unique_ptr</span><span class="o">&lt;</span><span class="n">Node</span><span class="o">&gt;</span> <span class="n">top</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">size</span><span class="p">;</span>

<span class="nl">public:</span>
	<span class="n">St</span><span class="p">()</span> <span class="o">:</span> <span class="n">top</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">),</span> <span class="n">size</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="p">{}</span>

	<span class="kt">void</span> <span class="nf">Push</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">auto</span> <span class="n">newNode</span> <span class="o">=</span> <span class="n">make_unique</span><span class="o">&lt;</span><span class="n">Node</span><span class="o">&gt;</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>

		<span class="n">newNode</span><span class="o">-&gt;</span><span class="n">prevNode</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">move</span><span class="p">(</span><span class="n">top</span><span class="p">);</span>
		<span class="n">top</span> <span class="o">=</span> <span class="n">move</span><span class="p">(</span><span class="n">newNode</span><span class="p">);</span>
		<span class="n">size</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kt">void</span> <span class="nf">Pop</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">top</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
			<span class="n">top</span> <span class="o">=</span> <span class="n">move</span><span class="p">(</span><span class="n">top</span><span class="o">-&gt;</span><span class="n">prevNode</span><span class="p">);</span>
			<span class="n">size</span><span class="o">--</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"-1"</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="kt">void</span> <span class="nf">Size</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">size</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kt">void</span> <span class="nf">Empty</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">size</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">?</span> <span class="sc">'1'</span> <span class="o">:</span> <span class="sc">'0'</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kt">void</span> <span class="nf">Top</span><span class="p">()</span>
	<span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">top</span> <span class="o">!=</span> <span class="nb">nullptr</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">top</span><span class="o">-&gt;</span><span class="n">data</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"-1"</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="k">auto</span> <span class="n">st</span> <span class="o">=</span> <span class="n">make_unique</span><span class="o">&lt;</span><span class="n">St</span><span class="o">&gt;</span><span class="p">();</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">n</span><span class="o">--</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">string</span> <span class="n">oper</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">oper</span><span class="p">;</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"push"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

			<span class="n">st</span><span class="o">-&gt;</span><span class="n">Push</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"pop"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">st</span><span class="o">-&gt;</span><span class="n">Pop</span><span class="p">();</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"size"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">st</span><span class="o">-&gt;</span><span class="n">Size</span><span class="p">();</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"empty"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">st</span><span class="o">-&gt;</span><span class="n">Empty</span><span class="p">();</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">st</span><span class="o">-&gt;</span><span class="n">Top</span><span class="p">();</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>문제 목적에 따라 직접 스택을 구현하여 해결. 스마트 포인터를 사용하여 해제를 신경쓰지 않도록 작성했다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1065번 한수 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1065/" rel="alternate" type="text/html" title="[백준] 1065번 한수 / C++"/><published>2024-04-27T00:00:00+00:00</published><updated>2024-04-27T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1065</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1065/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1065">백준 1065번 한수</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&lt;</span> <span class="mi">100</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">cnt</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">else</span>
	<span class="p">{</span>
		<span class="n">cnt</span> <span class="o">=</span> <span class="mi">99</span><span class="p">;</span>

		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">n</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="kt">int</span> <span class="n">hun</span> <span class="o">=</span> <span class="n">i</span> <span class="o">/</span> <span class="mi">100</span><span class="p">;</span>
			<span class="kt">int</span> <span class="n">ten</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span> <span class="o">%</span> <span class="mi">10</span><span class="p">;</span>
			<span class="kt">int</span> <span class="n">one</span> <span class="o">=</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">10</span><span class="p">;</span>

			<span class="k">if</span> <span class="p">((</span><span class="n">hun</span> <span class="o">-</span> <span class="n">ten</span><span class="p">)</span> <span class="o">==</span> <span class="p">(</span><span class="n">ten</span> <span class="o">-</span> <span class="n">one</span><span class="p">))</span>
			<span class="p">{</span>
				<span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 100 이하인 경우에는 비교가능한 자릿수가 없기 때문에 바로 출력하고, 100 이상일 경우에는 각 자리수의 차를 비교하여 카운트하여 출력한다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 9012번 괄호 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj9012/" rel="alternate" type="text/html" title="[백준] 9012번 괄호 / C++"/><published>2024-04-26T00:00:00+00:00</published><updated>2024-04-26T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj9012</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj9012/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/9012">백준 9012번 괄호</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;stack&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">t</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">t</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">t</span><span class="o">--</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">stack</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">st</span><span class="p">;</span>

		<span class="n">string</span> <span class="n">ps</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">ps</span><span class="p">;</span>

		<span class="kt">bool</span> <span class="n">vps</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>

		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">ps</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">ps</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'('</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
			<span class="p">}</span>
			<span class="k">else</span>
			<span class="p">{</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
				<span class="p">{</span>
					<span class="n">vps</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="p">}</span>
				<span class="k">else</span>
				<span class="p">{</span>
					<span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
				<span class="p">}</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
		<span class="p">{</span>
			<span class="n">vps</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">((</span><span class="n">vps</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="s">"YES"</span> <span class="o">:</span> <span class="s">"NO"</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>입려된 모든 괄호 내 순서대로 ‘(‘와 ‘)’의 짝이 모두 맞아야 VPS가 성립된다고 한다. 보자마자 버퍼를 생각했고, “’(‘가 입력되었을 때, ‘)’가 입력되어야 하나의 짝이 이루어져 나간다”라는 조건 하에 코드를 작업. 스택이 효율적이라고 생각하였고, ‘(‘가 입력되었을 때 스택에 <code class="language-plaintext highlighter-rouge">push</code>, ‘)’가 입력되었을 땐 st 내 원소 존재 여부에 따라 있으면 pop, 없다면 vps = false를 진행. 마지막에 스택이 <code class="language-plaintext highlighter-rouge">empty</code>가 아니라면 모든 짝이 이루어지지 않은 것이기 때문에 다시 한 번 vps = false로 처리해주고, vps를 출력하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 25206번 너의 평점은 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj25206/" rel="alternate" type="text/html" title="[백준] 25206번 너의 평점은 / C++"/><published>2024-04-25T00:00:00+00:00</published><updated>2024-04-25T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj25206</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj25206/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/25206">백준 25206번 너의 평점은</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iomanip&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">double</span> <span class="n">totalSum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">totalScore</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">string</span> <span class="n">subject</span><span class="p">,</span> <span class="n">grade</span><span class="p">;</span>
		<span class="kt">double</span> <span class="n">score</span><span class="p">;</span>

		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">subject</span> <span class="o">&gt;&gt;</span> <span class="n">score</span> <span class="o">&gt;&gt;</span> <span class="n">grade</span><span class="p">;</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"P"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"A+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">4.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"A0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">4.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"B+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">3.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"B0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">3.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"C+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">2.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"C0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">2.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"D+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">1.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"D0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">0.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>

		<span class="n">totalScore</span> <span class="o">+=</span> <span class="n">score</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">setprecision</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">totalSum</span> <span class="o">/</span> <span class="n">totalScore</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>받은 점수의 평균을 구하고, setprecision을 사용해서 소수점 6자리까지 출력해서 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1476번 날짜 계산 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1476/" rel="alternate" type="text/html" title="[백준] 1476번 날짜 계산 / C++"/><published>2024-04-24T00:00:00+00:00</published><updated>2024-04-24T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1476</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1476/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1476">백준 1476번 날짜 계산</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">e</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">e</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">year</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">((</span><span class="n">year</span> <span class="o">%</span> <span class="mi">15</span> <span class="o">!=</span> <span class="n">e</span> <span class="o">%</span> <span class="mi">15</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">28</span> <span class="o">!=</span> <span class="n">s</span> <span class="o">%</span> <span class="mi">28</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">19</span> <span class="o">!=</span> <span class="n">m</span> <span class="o">%</span> <span class="mi">19</span><span class="p">))</span>
	<span class="p">{</span>
		<span class="n">year</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">year</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>문제에서 입력 받는 e, s, m은 값은 year % 15, year % 28, year % 19로 출력이 가능함을 알 수 있었다. 첫 시도에서는 <code class="language-plaintext highlighter-rouge">if (year % 15 == e &amp;&amp; year % 28 == s &amp;&amp; year % 19)</code>를 사용하여 세 조건을 모두 만족하는 조건을 찾으려고 했으나, 시간 초과되어 실패했다. 조건을 평가해야 하기 때문에 성능에 문제가 있었다는 것을 알게 되었고, while 조건에서 바로 <code class="language-plaintext highlighter-rouge">(year % 15 != e % 15) || (year % 28 != s % 28) || (year % 19 != m % 19)</code>를 평가하여 해결할 수 있었다. 실패할 가능성이 높은 상황에서는 연산을 조기 중단할 가능성이 높은 코드로 작성하는 것이 효율적이라는 것을 배웠다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1789번 수들의 합 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1789/" rel="alternate" type="text/html" title="[백준] 1789번 수들의 합 / C++"/><published>2024-04-23T00:00:00+00:00</published><updated>2024-04-23T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1789</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1789/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1789">백준 1789번 수들의 합</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">long</span> <span class="kt">long</span> <span class="n">s</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">s</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">n</span><span class="o">++</span><span class="p">;</span>
		<span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="n">n</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">n</span><span class="o">--</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>서로 다른 자연수의 가장 큰 수를 구해야 하기 때문에 무조건 1부터 더한다. s를 초과할 경우, 연산을 종료하며 s보다 크다면 n– 했을 때가 가장 큰 수이다. s에서 n++를 빼주고, s가 0보다 작다면 n–를 하여 n을 출력하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry></feed>