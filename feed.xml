<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://mhoo999.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mhoo999.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-04-25T05:02:06+00:00</updated><id>https://mhoo999.github.io/feed.xml</id><title type="html">TechHoonology</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">[백준] 25206번 너의 평점은 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj25206/" rel="alternate" type="text/html" title="[백준] 25206번 너의 평점은 / C++"/><published>2024-04-25T00:00:00+00:00</published><updated>2024-04-25T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj25206</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj25206/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/25206">백준 25206번 너의 평점은</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iomanip&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">double</span> <span class="n">totalSum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">totalScore</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">string</span> <span class="n">subject</span><span class="p">,</span> <span class="n">grade</span><span class="p">;</span>
		<span class="kt">double</span> <span class="n">score</span><span class="p">;</span>

		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">subject</span> <span class="o">&gt;&gt;</span> <span class="n">score</span> <span class="o">&gt;&gt;</span> <span class="n">grade</span><span class="p">;</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"P"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">continue</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="k">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"A+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">4.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"A0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">4.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"B+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">3.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"B0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">3.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"C+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">2.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"C0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">2.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"D+"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">1.5</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">grade</span> <span class="o">==</span> <span class="s">"D0"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">totalSum</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">0.0</span> <span class="o">*</span> <span class="n">score</span><span class="p">);</span>
		<span class="p">}</span>

		<span class="n">totalScore</span> <span class="o">+=</span> <span class="n">score</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">setprecision</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">totalSum</span> <span class="o">/</span> <span class="n">totalScore</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>받은 점수의 평균을 구하고, setprecision을 사용해서 소수점 6자리까지 출력해서 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1476번 날짜 계산 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1476/" rel="alternate" type="text/html" title="[백준] 1476번 날짜 계산 / C++"/><published>2024-04-24T00:00:00+00:00</published><updated>2024-04-24T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1476</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1476/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1476">백준 1476번 날짜 계산</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
	<span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">e</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">e</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">year</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">((</span><span class="n">year</span> <span class="o">%</span> <span class="mi">15</span> <span class="o">!=</span> <span class="n">e</span> <span class="o">%</span> <span class="mi">15</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">28</span> <span class="o">!=</span> <span class="n">s</span> <span class="o">%</span> <span class="mi">28</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">year</span> <span class="o">%</span> <span class="mi">19</span> <span class="o">!=</span> <span class="n">m</span> <span class="o">%</span> <span class="mi">19</span><span class="p">))</span>
	<span class="p">{</span>
		<span class="n">year</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">year</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>문제에서 입력 받는 e, s, m은 값은 year % 15, year % 28, year % 19로 출력이 가능함을 알 수 있었다. 첫 시도에서는 <code class="language-plaintext highlighter-rouge">if (year % 15 == e &amp;&amp; year % 28 == s &amp;&amp; year % 19)</code>를 사용하여 세 조건을 모두 만족하는 조건을 찾으려고 했으나, 시간 초과되어 실패했다. 조건을 평가해야 하기 때문에 성능에 문제가 있었다는 것을 알게 되었고, while 조건에서 바로 <code class="language-plaintext highlighter-rouge">(year % 15 != e % 15) || (year % 28 != s % 28) || (year % 19 != m % 19)</code>를 평가하여 해결할 수 있었다. 실패할 가능성이 높은 상황에서는 연산을 조기 중단할 가능성이 높은 코드로 작성하는 것이 효율적이라는 것을 배웠다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1789번 수들의 합 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1789/" rel="alternate" type="text/html" title="[백준] 1789번 수들의 합 / C++"/><published>2024-04-23T00:00:00+00:00</published><updated>2024-04-23T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1789</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1789/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1789">백준 1789번 수들의 합</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="kt">long</span> <span class="kt">long</span> <span class="n">s</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">s</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">n</span><span class="o">++</span><span class="p">;</span>
		<span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="n">n</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">if</span> <span class="p">(</span><span class="n">s</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">n</span><span class="o">--</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>서로 다른 자연수의 가장 큰 수를 구해야 하기 때문에 무조건 1부터 더한다. s를 초과할 경우, 연산을 종료하며 s보다 크다면 n– 했을 때가 가장 큰 수이다. s에서 n++를 빼주고, s가 0보다 작다면 n–를 하여 n을 출력하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1475번 방 번호 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1475/" rel="alternate" type="text/html" title="[백준] 1475번 방 번호 / C++"/><published>2024-04-22T00:00:00+00:00</published><updated>2024-04-22T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1475</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1475/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1475">백준 1475번 방 번호</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">number_set</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span> <span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="n">string</span> <span class="n">n</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">n</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="sc">'0'</span><span class="p">;</span>
		<span class="n">number_set</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="o">++</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="kt">int</span> <span class="n">six_nine</span> <span class="o">=</span> <span class="p">(</span><span class="n">number_set</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">+</span> <span class="n">number_set</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
	<span class="n">number_set</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="n">number_set</span><span class="p">[</span><span class="mi">9</span><span class="p">]</span> <span class="o">=</span> <span class="n">six_nine</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">number_set</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">cnt</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cnt</span> <span class="o">=</span> <span class="n">number_set</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>방 번호 N을 장식하는데, 0-9까지 들어있는 숫자 세트를 몇 개를 써야 하는 지를 계산하는 프로그램 코드를 작성하는 문제. 숫자 0-9에서 가장 많이 중복되는 숫자의 개수를 출력하면 되는 간단한 문제. 하지만 6과 9는 치환이 가능하다는 기믹이 있다. 6과 9를 각각 6의 개수와 9의 개수를 더 해 항상 반올림이 되도록 +1을 한 후 2로 나눠준 수를 대입하고, 예상대로 숫자를 출력하면 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 11723번 집합 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj11723/" rel="alternate" type="text/html" title="[백준] 11723번 집합 / C++"/><published>2024-04-21T00:00:00+00:00</published><updated>2024-04-21T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj11723</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj11723/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/11723">백준 11723번 집합</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">bool</span> <span class="n">arr</span><span class="p">[</span><span class="mi">21</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="nb">false</span> <span class="p">};</span>

<span class="kt">void</span> <span class="nf">all</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">fill</span><span class="p">(</span><span class="n">begin</span><span class="p">(</span><span class="n">arr</span><span class="p">),</span> <span class="n">end</span><span class="p">(</span><span class="n">arr</span><span class="p">),</span> <span class="nb">true</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">empty</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">fill</span><span class="p">(</span><span class="n">begin</span><span class="p">(</span><span class="n">arr</span><span class="p">),</span> <span class="n">end</span><span class="p">(</span><span class="n">arr</span><span class="p">),</span> <span class="nb">false</span><span class="p">);</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">nullptr</span><span class="p">);</span>

	<span class="n">string</span> <span class="n">oper</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">m</span><span class="p">,</span> <span class="n">x</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">m</span><span class="o">--</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">oper</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"add"</span><span class="p">)</span>
        <span class="p">{</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>
			<span class="n">arr</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"remove"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>
			<span class="n">arr</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"check"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"toggle"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>
			<span class="n">arr</span><span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">=</span> <span class="o">!</span><span class="n">arr</span><span class="p">[</span><span class="n">x</span><span class="p">];</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">oper</span> <span class="o">==</span> <span class="s">"all"</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">all</span><span class="p">();</span>
		<span class="p">}</span>
		<span class="k">else</span>
		<span class="p">{</span>
			<span class="n">empty</span><span class="p">();</span>
		<span class="p">}</span>
    <span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>시간 제한이 1.5초로 굉장히 효율적인 연산을 필요로 하는 문제다. 집합 내의 숫자를 확인하는 연산이 있어서 해시를 쓰면 빠르게 풀 수 있을 줄 알았는데, 시간 초과로 실패. x의 입력이 1~20 사이라는 점에서 힌트를 얻어 21개 짜리(0빼고 20까지 써야하니까) bool 타입 집합을 만들고 입력받는 연산을 처리하는 코드를 작성하여 해결했다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 1676번 팩토리얼 0의 개수 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj1676/" rel="alternate" type="text/html" title="[백준] 1676번 팩토리얼 0의 개수 / C++"/><published>2024-04-20T00:00:00+00:00</published><updated>2024-04-20T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj1676</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj1676/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/1676">백준 1676번 팩토리얼 0의 개수</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>

	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="n">N</span> <span class="o">/</span> <span class="mi">5</span> <span class="o">+</span> <span class="n">N</span> <span class="o">/</span> <span class="mi">25</span> <span class="o">+</span> <span class="n">N</span> <span class="o">/</span> <span class="mi">125</span><span class="p">;</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>입력받은 수의 팩토리얼을 쭉 나열하고, 맨 뒤에부터 0의 개수를 세는 문제. 입력 받는 가장 큰 수인 N을 팩토리얼 연산하면 굉장히 큰 수가 나오기 때문에 계산하기 어렵다. 하지만 0의 개수를 세는 것은 문제없다. N이 5로 몇 번 나누어 떨어지는지에 따라 결정되기 때문이다. 5의 배수 중 N의 최대값 보다 작은 수, 125까지의 나눈 수를 더한 값을 출력하여 해결.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">해쉬 테이블을 기반한 자료 구조 Hash Set</title><link href="https://mhoo999.github.io/blog/2024/Hash-Set/" rel="alternate" type="text/html" title="해쉬 테이블을 기반한 자료 구조 Hash Set"/><published>2024-04-19T00:00:00+00:00</published><updated>2024-04-19T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/Hash%20Set</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/Hash-Set/"><![CDATA[<p>데이터를 빠르게 검색하고 관리해야 하는 경우 해시 테이블을 기반으로 한 해시 세트는 매우 유용하게 사용된다. 해시 세트는 주로 데이터의 존재 여부를 빠르게 확인할 수 있도록 설계되었으며, 각 데이터 항목은 해시 함수를 통해 계산된 고유한 해시 코드를 이용해 저장 위치가 결정된다. 이 키는 고유해야 하기 때문에 <code class="language-plaintext highlighter-rouge">중복된 항목</code>을 허용하지 않는다.</p> <h3 id="작동원리">작동원리</h3> <ol> <li><strong>해시 함수</strong>: 해시 세트는 해시 함수를 사용해 입렫횐 키의 해시 값을 계산한다. 이 해시 값은 요소가 저장될 버킷(위치)를 결정하는 데 사용됨.</li> <li><strong>버킷 할당</strong>: 계산된 해시 값에 따라 각 키는 특정 버킷에 저장되는데, 버킷 수는 고정되어 있지 않고 데이터의 양에 따라 동적으로 조정될 수 있음.</li> <li><strong>충돌 해결</strong>: 두 개 이상의 키가 동일한 버킷에 할당될 경우를 충돌이라 하는데, 이러한 충돌을 체이닝 방식 등으로 해결함.</li> </ol> <h3 id="해시-세트의-장점">해시 세트의 장점</h3> <ul> <li><strong>빠른 접근 속도</strong>: 평균적으로 O(1)의 시간 복잡도로 데이터의 존재 여부를 확인할 수 있음.</li> <li><strong>데이터 관리 효율성</strong>: 중복 데이터를 자동으로 제거하므로 데이터 관리가 용이함.</li> <li><strong>동적 크기 조정</strong>: 데이터의 양에 따라 내부 버킷의 크기가 조정되므로 메모리 사용이 효율적임.</li> </ul> <p>C++ 표준 라이브러리에서 제공하는 해시 테이블 기반의 자료구조</p> <ul> <li><code class="language-plaintext highlighter-rouge">unordered_set</code> : 값을 저장하는 해시 테이블 기반의 자료구조</li> <li><code class="language-plaintext highlighter-rouge">unordered_map</code> : 키-값 쌍을 저장하는 해시 테이블 기반의 자료구조</li> <li><code class="language-plaintext highlighter-rouge">unordered_multiset</code> : unordered_set과 유사하지만, 중복된 요소를 저장할 수 있음</li> <li><code class="language-plaintext highlighter-rouge">unordered_multimap</code> : unordered_map과 유사하지만, 중복된 요소를 저장할 수 있음</li> </ul>]]></content><author><name></name></author><category term="datastructure"/><category term="hashset"/><category term="unordered"/><category term="datastructure"/><summary type="html"><![CDATA[해쉬 테이블을 기반으로 하는 자료구조 Hash Set에 대해 알아보자]]></summary></entry><entry><title type="html">[백준] 10815번 숫자 카드 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj10815/" rel="alternate" type="text/html" title="[백준] 10815번 숫자 카드 / C++"/><published>2024-04-19T00:00:00+00:00</published><updated>2024-04-19T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj10815</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj10815/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/10815">백준 10815번 숫자 카드</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;unordered_set&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">unordered_set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">cardSet</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

		<span class="n">cardSet</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">M</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span><span class="p">;</span>

		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="p">(</span><span class="n">cardSet</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="nb">true</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">' '</span><span class="p">;</span>
	<span class="p">}</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>첫 입력에서는 내가 가진 카드를, 두 번째 입력에서는 보유 여부를 확인하는 카드의 숫자가 입력된다. 입력 여부에 맞춰 1과 0을 출력하면 되는 문제이다. 내가 가진 카드를 모두 순회하게 되면 O(N*M)이 되므로 매우 비효율적이다. unordered_set(hash set)을 사용하면 O(N+M)으로 효율적인 결과를 도출할 수 있다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 2563번 색종이 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj2563/" rel="alternate" type="text/html" title="[백준] 2563번 색종이 / C++"/><published>2024-04-18T00:00:00+00:00</published><updated>2024-04-18T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj2563</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj2563/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/2563">백준 2563번 색종이</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">paper</span><span class="p">[</span><span class="mi">101</span><span class="p">][</span><span class="mi">101</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span> <span class="p">};</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">T</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>

	<span class="k">while</span> <span class="p">(</span><span class="n">T</span><span class="o">--</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">y</span><span class="p">;</span>

		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">10</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">paper</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">101</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="mi">101</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span> <span class="p">(</span><span class="n">paper</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">cnt</span><span class="o">++</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">cnt</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>크기가 101*101인 배열을 하나 만들고 0으로 초기화한다. T번 색종이의 좌측 하단 x, y 좌표를 입력 받는데, 입력 받을 때마다 x, y 각각 +10 만큼의 좌표 값을 1로 바꿔준다. 아무리 많이 중복되어도 1에서 숫자가 바뀌지 않기 때문에 연산이 끝난 후 카운트하여 출력하면 된다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry><entry><title type="html">[백준] 11866번 요세푸스 문제 0 / C++</title><link href="https://mhoo999.github.io/blog/2024/boj11866/" rel="alternate" type="text/html" title="[백준] 11866번 요세푸스 문제 0 / C++"/><published>2024-04-17T00:00:00+00:00</published><updated>2024-04-17T00:00:00+00:00</updated><id>https://mhoo999.github.io/blog/2024/boj11866</id><content type="html" xml:base="https://mhoo999.github.io/blog/2024/boj11866/"><![CDATA[<h3 id="문제">#문제</h3> <p><a href="https://www.acmicpc.net/problem/11866">백준 11866번 요세푸스 문제 0</a></p> <h3 id="풀이">#풀이</h3> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">peoples</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span> <span class="n">cin</span><span class="p">.</span><span class="n">tie</span><span class="p">(</span><span class="nb">NULL</span><span class="p">);</span>

	<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">K</span><span class="p">;</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">K</span><span class="p">;</span>

	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">peoples</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
	<span class="p">}</span>

	<span class="kt">int</span> <span class="n">target</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'&lt;'</span><span class="p">;</span>
	<span class="k">while</span> <span class="p">(</span><span class="o">!</span><span class="n">peoples</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
	<span class="p">{</span>
		<span class="n">target</span> <span class="o">+=</span> <span class="n">K</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">target</span> <span class="o">%=</span> <span class="n">peoples</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>

		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">peoples</span><span class="p">[</span><span class="n">target</span><span class="p">];</span>
		<span class="n">peoples</span><span class="p">.</span><span class="n">erase</span><span class="p">(</span><span class="n">peoples</span><span class="p">.</span><span class="n">begin</span><span class="p">()</span> <span class="o">+</span> <span class="n">target</span><span class="p">);</span>

		<span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">peoples</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
		<span class="p">{</span>
			<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">", "</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'&gt;'</span><span class="p">;</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div> <h3 id="정리">#정리</h3> <p>주어진 N개의 원소를 K의 배수로 삭제한다. 7, 3이 주어졌다면 … 3, 6, 2(7&gt;1&gt;2), 7(4&gt;5&gt;7), 5, 1, 4 이런 식으로 넘어가면 1부터, 이미 삭제된 숫자라면 넘어간다. 주어진 N개만큼 vector의 원소를 초기화 후, vector가 empty가 아닌 동안 다음의 연산을 반복했다. target num에 K-1을 더해주고, vector의 크기로 나머지 연산을 하면서 출력. 출력된 숫자는 erase 메서드를 사용하여 지워줬다. **알고리즘 공부하면서 linked list로 해결한 경험이 생각났다. 그 때는 타겟 숫자를 삭제하면서, 앞 뒤 원소의 prev, next pointer를 변경해주며 해결했었다. 지금은 vector가 알아서 그 일을 해주니, 훨씬 편하게 문제를 해결할 수 있게 되었다.</p>]]></content><author><name></name></author><category term="algorithm"/><category term="백준"/><category term="boj"/><category term="c++"/><category term="codingtest"/><category term="algorithm"/><summary type="html"><![CDATA[백준 C++ 풀이]]></summary></entry></feed>